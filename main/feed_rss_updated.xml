<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>Algorithms for Competitive Programming</title><description>The goal of this project is to translate the wonderful resource http://e-maxx.ru/algo which provides descriptions of many algorithms and data structures especially popular in field of competitive programming. Moreover we want to improve the collected knowledge by extending the articles and adding new articles to the collection.</description><link>https://cp-algorithms.com/</link><atom:link href="https://cp-algorithms.com/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/cp-algorithms/cp-algorithms</docs><language>en</language> <pubDate>Tue, 15 Oct 2024 15:39:10 -0000</pubDate> <lastBuildDate>Tue, 15 Oct 2024 15:39:10 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.15.0</generator> <item> <title>Finding a Negative Cycle in the Graph</title> <description>&lt;h1&gt;Finding a negative cycle in the graph&lt;/h1&gt;&lt;p&gt;You are given a directed weighted graph $G$ with $N$ vertices and $M$ edges. Find any cycle of negative weight in it...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/finding-negative-cycle-in-graph.html</link> <pubDate>Mon, 14 Oct 2024 07:14:57 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/finding-negative-cycle-in-graph.html</guid> </item> <item> <title>Convex hull construction</title> <description>&lt;h1&gt;Convex Hull construction&lt;/h1&gt;&lt;p&gt;In this article we will discuss the problem of constructing a convex hull from a set of points.&lt;/p&gt;&lt;p&gt;Consider $N$ points given on a p...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/convex-hull.html</link> <pubDate>Sun, 13 Oct 2024 23:38:15 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/convex-hull.html</guid> </item> <item> <title>Integration by Simpson&#39;s formula</title> <description>&lt;h1&gt;Integration by Simpson&#39;s formula&lt;/h1&gt;&lt;p&gt;We are going to calculate the value of a definite integral&lt;/p&gt;&lt;p&gt;$$\int_a ^ b f (x) dx$$&lt;/p&gt;&lt;p&gt;The solution described here was publ...&lt;/p&gt;</description><link>https://cp-algorithms.com/num_methods/simpson-integration.html</link> <pubDate>Sun, 13 Oct 2024 23:38:15 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/num_methods/simpson-integration.html</guid> </item> <item> <title>Maximum flow - Ford-Fulkerson and Edmonds-Karp</title> <description>&lt;h1&gt;Maximum flow - Ford-Fulkerson and Edmonds-Karp&lt;/h1&gt;&lt;p&gt;The Edmonds-Karp algorithm is an implementation of the Ford-Fulkerson method for computing a maximal flow i...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/edmonds_karp.html</link> <pubDate>Sun, 13 Oct 2024 09:24:36 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/edmonds_karp.html</guid> </item> <item> <title>Breadth First Search</title> <description>&lt;h1&gt;Breadth-first search&lt;/h1&gt;&lt;p&gt;Breadth first search is one of the basic and essential searching algorithms on graphs.&lt;/p&gt;&lt;p&gt;As a result of how the algorithm works, the p...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/breadth-first-search.html</link> <pubDate>Sun, 13 Oct 2024 09:02:39 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/breadth-first-search.html</guid> </item> <item> <title>Manhattan Distance</title> <description>&lt;h1&gt;Manhattan Distance&lt;/h1&gt;&lt;h2&gt;Definition&lt;/h2&gt;&lt;p&gt;For points $p$ and $q$ on a plane, we can define the distance between them as the sum of the differences between their $...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/manhattan-distance.html</link> <pubDate>Sat, 12 Oct 2024 14:55:01 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/manhattan-distance.html</guid> </item> <item> <title>Disjoint Set Union</title> <description>&lt;h1&gt;Disjoint Set Union&lt;/h1&gt;&lt;p&gt;This article discusses the data structure &lt;strong&gt;Disjoint Set Union&lt;/strong&gt; or &lt;strong&gt;DSU&lt;/strong&gt;.Often it is also called &lt;strong&gt;Union Find&lt;/strong&gt; because of its two ...&lt;/p&gt;</description><link>https://cp-algorithms.com/data_structures/disjoint_set_union.html</link> <pubDate>Sat, 12 Oct 2024 10:13:20 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/data_structures/disjoint_set_union.html</guid> </item> <item> <title>The Stern-Brocot Tree and Farey Sequences</title> <description>&lt;h1&gt;The Stern-Brocot tree and Farey sequences&lt;/h1&gt;&lt;h2&gt;Stern-Brocot tree&lt;/h2&gt;&lt;p&gt;The Stern-Brocot tree is an elegant construction to represent the set of all positive frac...&lt;/p&gt;</description><link>https://cp-algorithms.com/others/stern_brocot_tree_farey_sequences.html</link> <pubDate>Sat, 12 Oct 2024 10:12:15 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/others/stern_brocot_tree_farey_sequences.html</guid> </item> <item> <title>Sprague-Grundy theorem. Nim</title> <description>&lt;h1&gt;Sprague-Grundy theorem. Nim&lt;/h1&gt;&lt;h2&gt;Introduction&lt;/h2&gt;&lt;p&gt;This theorem describes the so-called &lt;strong&gt;impartial&lt;/strong&gt; two-player game,i.e. those in which the available moves a...&lt;/p&gt;</description><link>https://cp-algorithms.com/game_theory/sprague-grundy-nim.html</link> <pubDate>Sat, 12 Oct 2024 00:42:54 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/game_theory/sprague-grundy-nim.html</guid> </item> <item> <title>Strongly Connected Components and Condensation Graph</title> <description>&lt;h1&gt;Strongly connected components and the condensation graph&lt;/h1&gt;&lt;h2&gt;Definitions&lt;/h2&gt;&lt;p&gt;Let $G=(V,E)$ be a directed graph with vertices $V$ and edges $E \subseteq V \time...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/strongly-connected-components.html</link> <pubDate>Sat, 12 Oct 2024 00:27:41 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/strongly-connected-components.html</guid> </item> <item> <title>Introduction to Dynamic Programming</title> <description>&lt;h1&gt;Introduction to Dynamic Programming&lt;/h1&gt;&lt;p&gt;The essence of dynamic programming is to avoid repeated calculation. Often, dynamic programming problems are naturall...&lt;/p&gt;</description><link>https://cp-algorithms.com/dynamic_programming/intro-to-dp.html</link> <pubDate>Sat, 12 Oct 2024 00:14:52 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/dynamic_programming/intro-to-dp.html</guid> </item> <item> <title>Bellman-Ford - finding shortest paths with negative weights</title> <description>&lt;h1&gt;Bellman-Ford Algorithm&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Single source shortest path with negative weight edges&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Suppose that we are given a weighted directed graph $G$ with $n$ vertic...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/bellman_ford.html</link> <pubDate>Sat, 12 Oct 2024 00:11:42 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/bellman_ford.html</guid> </item> <item> <title>Sieve of Eratosthenes</title> <description>&lt;h1&gt;Sieve of Eratosthenes&lt;/h1&gt;&lt;p&gt;Sieve of Eratosthenes is an algorithm for finding all the prime numbers in a segment $[1;n]$ using $O(n \log \log n)$ operations.&lt;/p&gt;&lt;p&gt;T...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/sieve-of-eratosthenes.html</link> <pubDate>Fri, 11 Oct 2024 10:03:16 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/sieve-of-eratosthenes.html</guid> </item> <item> <title>Sqrt Decomposition</title> <description>&lt;h1&gt;Sqrt Decomposition&lt;/h1&gt;&lt;p&gt;Sqrt Decomposition is a method (or a data structure) that allows you to perform some common operations (finding sum of the elements of ...&lt;/p&gt;</description><link>https://cp-algorithms.com/data_structures/sqrt_decomposition.html</link> <pubDate>Tue, 01 Oct 2024 05:06:32 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/data_structures/sqrt_decomposition.html</guid> </item> <item> <title>Eulerian Path</title> <description>&lt;h1&gt;Finding the Eulerian path in $O(M)$&lt;/h1&gt;&lt;p&gt;A Eulerian path is a path in a graph that passes through all of its edges exactly once.A Eulerian cycle is a Eulerian...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/euler_path.html</link> <pubDate>Sat, 14 Sep 2024 05:18:10 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/euler_path.html</guid> </item> <item> <title>Factorial modulo p</title> <description>&lt;h1&gt;Factorial modulo $p$&lt;/h1&gt;&lt;p&gt;In some cases it is necessary to consider complex formulas modulo some prime $p$, containing factorials in both numerator and denomin...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/factorial-modulo.html</link> <pubDate>Sun, 25 Aug 2024 09:11:12 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/factorial-modulo.html</guid> </item> <item> <title>Knapsack Problem</title> <description>&lt;h1&gt;Knapsack Problem&lt;/h1&gt;&lt;p&gt;Prerequisite knowledge: &lt;a href=&#34;https://cp-algorithms.com/dynamic_programming/intro-to-dp.html&#34;&gt;Introduction to Dynamic Programming&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;Introduc...&lt;/h2&gt;</description><link>https://cp-algorithms.com/dynamic_programming/knapsack.html</link> <pubDate>Fri, 16 Aug 2024 02:48:29 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/dynamic_programming/knapsack.html</guid> </item> <item> <title>Extended Euclidean Algorithm</title> <description>&lt;h1&gt;Extended Euclidean Algorithm&lt;/h1&gt;&lt;p&gt;While the &lt;a href=&#34;euclid-algorithm.md&#34;&gt;Euclidean algorithm&lt;/a&gt; calculates only the greatest common divisor (GCD) of two integers $a$ an...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/extended-euclid-algorithm.html</link> <pubDate>Thu, 15 Aug 2024 10:16:54 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/extended-euclid-algorithm.html</guid> </item> <item> <title>Suffix Array</title> <description>&lt;h1&gt;Suffix Array&lt;/h1&gt;&lt;h2&gt;Definition&lt;/h2&gt;&lt;p&gt;Let $s$ be a string of length $n$. The $i$-th suffix of $s$ is the substring $s[i \ldots n - 1]$.&lt;/p&gt;&lt;p&gt;A &lt;strong&gt;suffix array&lt;/strong&gt; will con...&lt;/p&gt;</description><link>https://cp-algorithms.com/string/suffix-array.html</link> <pubDate>Fri, 02 Aug 2024 22:45:41 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/string/suffix-array.html</guid> </item> <item> <title>Fenwick Tree</title> <description>&lt;h1&gt;Fenwick Tree&lt;/h1&gt;&lt;p&gt;Let $f$ be some group operation (a binary associative function over a set with an identity element and inverse elements) and $A$ be an array ...&lt;/p&gt;</description><link>https://cp-algorithms.com/data_structures/fenwick.html</link> <pubDate>Wed, 31 Jul 2024 14:14:13 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/data_structures/fenwick.html</guid> </item> </channel></rss>